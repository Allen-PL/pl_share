声明：这个项目是我学习函数这一块的时候练手写的，适合的人群也是一些刚刚新手，老鸟们求绕路。

这个小项目涉及的知识点：函数，模块，规划化目录，装饰器，日志，文件操作，python的几种数据类型。（具体的思路我会在文件中详细说明）

项目需求：用**规范化项目目录**的格式模拟一个ATM系统。
项目功能：

1. 登录（可支持多个账户（非同时）登录）。
2. 注册。
3. 查看余额。
4. 存钱。
5. 转账（给其他用户转钱）。
6. 查看账户流水。
7. 退出

提供的思路：ATM直译就是取款机，但是咱们是模拟一个取款机，此取款机可以完成实现存钱，转账，查看余额，以及查看账户流水等功能。

要求以及分值分配：
1. 利用装饰器完成登录验证功能（3,4,5,6功能需要验证）。

2. 登录功能要求：用户名、密码（密码需要md5加密）从文件中读取，进行三次验证，验证不成功则退出整个程序。

3. 注册功能要求：
   - 用户名要求：只能含有字母数字不能含有特殊字符并且要确保唯一性。
   - 密码的要求：长度在6与14个字符之间，密文存储。
   - 初始钱数：money: 0.
   - **注意**：每个用户的以上信息通过字典以及json模块，以 用户名.json的形式存储，用户的json文件存储在db文件夹中。

4. 查看余额功能要求：
   用户登录成功之后，选择此功能即可显示账户余额，并且将每次查看记录通过日志的方式记录到用户日志中（用户日志文件建议为：用户名.log）。

5. 存钱功能要求：
   用户通过输入存储的钱数，然后将存储的钱累加到用户名.json那个json文件的字典中，并且将每次存钱记录通过日志的方式记录到用户日志中（用户日志文件建议为：用户名.log）。

6. 转账功能要求：
   用户通过输入对方用户名以及转账钱数完成给对方转账功能。
        - 要检测输入的对方用户账户是否存在。
        - 要检测你账户余额是否够用。
         - 将每次转账记录通过日志的方式记录到用户日志中（用户日志文件建议为：用户名.log）。

7. 查看流水要求：
   用户通过选择此功能将用户专属的log打印出来。


文件目录说明：
bin：这个目录一般存放的是启动文件，程序的入口就是整个文件。
conf：这个目录一般存放的是配置文件，是一些不变的常量和路径等。
core：这个是项目的核心目录，下面的文件执行主业务功能，所以功能函数都写在这里面。
db：这个就是数据库目录，就是存放我们的数据的。
lib：这个是公用目录，它下面的文件写的代码是可以被重复使用的。
log：这个看名字就知道事日志目录，里面存放的肯定也是我们的日志文件。

